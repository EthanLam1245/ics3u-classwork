Functional Decomposition
------------------------


Vending machine from a human perspective (Example from class)
-------------------------------------------------------------

You get a bag of chips from a vending machine
- Approach machine
    - Walk until you are within arms reach
- Determine the number for the flavour I want
    - Search for the specific flavour
    - Look just below it for the ID number (Remember that number)
- Put in appropriate amount of money
    - Look beside the ID number for the cost of the snack
    - Get out some money greater or equal to that amount
    - Place that money into the intake
- Key-in the number for the flavour
- Get bag from bottom of machine
    - Bend down
    - Put arm through slot
    - Grab chips
    - Pull your arm out (with the chips)


Vending machine from the machine's perspective 
----------------------------------------------

You are waiting for someone to give you money so you can give them a snack
- Awaiting input from a user
    - Display a message such as 'awaiting input' on the display panel
- Determine which snack was chosen by the user
    - Read the ID number punched into the machine
    - Compare this ID number with all the available ID numbers (ID numbers indicating the snack)
    - If the ID number matches with a specified snack, store it in memory
- Determine if they paid enough money for that chosen snack
    - Read how much the specified snack costs
    - Read how much the user paid in the intake
    - Compare the money paid to the cost of the selected snack
    - If they did not pay enough, display 'Too few coins', if they paid enough, move on to the next step
- Dispense the snack and return change
    - Release one of the selected snacks into the funnel that leads to the bottom of the machine
    - If the user paid more than needed, return the coins back into the intake
        - Find the difference between the amount needed and the amount paid
        - Return the money and slide it back to the intake if necessary
- Wait for the next user to get a snack
    - Display 'awaiting input' again on the panel after snack has been dispensed and money has been received
    
There are basic programming concepts all throughout the break-down above, including conditional branching, loops, and nested structures
- For example, comparing the ID number input with all the available ID numbers requires a loop to do it linearly without missing any options
- An if statement is nested within the loop to compare whether or not the ID number matches the specified snack
- If statements are also used to compare the amount of money paid versus the actual cost of the selected snack and basic commands are run depending on the result of the if statements
- Displaying an 'awaiting input' message is also a simple, basic command


Waking up and going to school
-----------------------------

Getting ready and being prepared to go to school and learn
- Wake up at 8AM
    - Use an alarm which is set on loop weekly from Monday to Friday
    - Turn off the alarm once wide awake
- Make my bed
    - Grab the blankets and fold them neatly 
    - Place the folded blankets on the bed
    - Rearrange the pillow back to its usual position
- Eat a quick breakfast
    - Go downstairs
    - Pour some cereal into a bowl
    - Pour milk into the bowl full of cereal
    - Grab a spoon
    - Enjoy the meal
- Brush teeth
    - Go upstairs
    - Wet the toothbrush
    - Apply toothpaste on the toothbrush
    - Scrub the toothbrush on my teeth for 2 minutes
    - Rinse mouth after 2 minutes
- Turn on the computer
    - Press the power button on my computer
    - Wait for the applications to load in before proceeding
- Log into class at 8:30AM
    - Open Google.com
    - Sign in to the google meet with my k12 acount before 8:30AM
    - Indicate that I am in class by saying 'good morning' or 'hello' to the teacher

Basic programming concepts can be found in the break-down above
- Simple commands
    - Almost every instruction, such as 'go downstairs' or 'go upstairs' or 'say good morning or hello' are all simple commands
- Conditional statements
    - If I am wide awake, then turn off the alarm, if not, I should leave it running
    - If I am finished brushing my teeth, then rinse my mouth
- Looping/repetition
    - My alarm is set on a loop every week from Monday to Friday
    - I must repeatedly scrub the toothbrush on my teeth for 2 minutes (to make sure it is clean)


The cookie is too big for the glass
-----------------------------------

You must dip parts of the cookie into the milk contained in the glass
- Break the cookie into smaller chunks so it can fit in the glass
    - Take one cookie that does not fit in the glass
        - If the diameter of the cookie is larger than the diameter of the rim of the glass, then take that one
    - Bend it until it snaps in half
    - Approximate and guess whether these 2 pieces are now able to fit in the glass
    - If these pieces are still unable to fit into the glass and dip inside the milk, then bend them again
    - There should now be 4 pieces of this cookie, divided evenly into quarters
    - If these pieces are still too big, then repeat the process and bend them again until each piece can finally fit in the glass
- Dip all pieces of the cookie into the milk 
    - Take one of the pieces and plunge it into the milk
        - Grab one of the divided pieces
        - Hover that piece over the milk
        - Let go and let the piece of cookie soak with milk
        - Take it back out once you think the cookie has absorbed enough milk
    - Take another piece and do the same
    - Repeat until all pieces have been dipped in the milk

There are many ways to prevent this problem for next time:
- Get a larger glass and pour the milk in there
    - Compare the diameter of the cookie versus the diameter of the rim of the glass
    - If the diameter of the cookie is greater than the rim of the glass, then choose another glass with a larger rim diameter
    - Take the new glass from the cupboards that has a larger rim diameter and compare it with the cookie's diameter again
    - If the cookie's diameter is smaller than the cup's rim diameter, then this problem is prevented

- Buy smaller cookies from the store
    - Go to any store that sells cookies
        - Walk or drive there depending on distance
    - Walk down the aisle until you see the cookie section
    - Grab a bag of appropriate sized cookies
        - Make sure the cookies' diameter is less than the rim diameter of the glass you have at home
        - If the cookies' diameter is still greater than the rim diameter, move to the next bag of cookies and compare their diameters
        - The bag of appropriate sized cookies will have cookies with a diameter less than that of the rim diameter
    - Go to the cashier and pay up
        - Check the price on the price tag
        - Grab more than or equal to that amount of money from your pocket
        - Give this to the cashier
        - Grab the change (if any)
    - Go back home with the new bag of smaller cookies
        - Use the same method of transportation that you used earlier
    - Now, the cookie's diameter should be smaller than the cup's rim diameter, thus, the problem is prevented

How can this problem be solved with an app?
- An app that is designed to tell the user whether or not the cookies are too big for the glass
    - First, input the rim diameter of the glass you will be using and pouring the milk in
    - Next, input the estimated diameter of each cookie that you will be eating
    - Now, the app will compare the 2 diameters and the output will depend on the results
        - If the cookie diameter is greater than or equal to the rim diameter...
            - Give suggestions on how to break the cookie
                - For example, if the diameter of the cookie is nearly double the diameter of the glass, the app will suggest to bend the cookie directly in half
                - If the cookie is much larger than the rim diameter, the app will suggest to break the cookie in the most effective ways possible to save time (thirds, 
                quarters, fifths, etc.)
        - If the cookie diameter is less than the rim diameter...
            - Display, 'All Good!'


The spoon dropped into the gravy
--------------------------------

To fix this problem, you must clean the spoon so it can be used again
- Grab the spoon out of the gravy
    - Use 2 fingers and hold on to the spoon in the gravy while touching and contaminating as less of the gravy as possible
    - While holding on to the spoon, life your hand out of the container of gravy
- Walk over to the sink with the spoon in hand
    - Walk until you are within arms reach of the sink
    - Ensure that nothing drips onto the floor
        - Have another hand under the spoon incase any gravy drips down
- Wash the spoon until it is no longer covered in gravy
    - Turn on the water faucet and extend your arm until the spoon is directly under the running water
    - Scrub the spoon with both of your hands until little to no gravy is left on it
    - Turn off the tap
- Bring it back to the dinning table if you are to use it again (If not, then throw it into the dishwasher)
    - Walk until you are by the dinning table and sit back down on the seat you got up from while holding on to the clean spoon
- Put only the front of the spoon in the gravy and at an angle that will not allow the spoon to slip in again
    - Rest the spoon on the edge of the container and release it from your grip once it is stable, with the scoop part submerged in the gravy

There are several ways to prevent this problem
- Get a longer spoon than the diagonal of the container that way there is no chance for it to drop into the gravy
    - Measure the diagonal of the container and compare it with the spoon's length
    - If the spoon's length is less than the diagonal of the container, get another spoon from the drawer
        - The spoon must be of different length
        - Compare the length of this spoon with the diagonal of the container again
        - If the spoon is still smaller than the diagonal of the container, repeat this process by getting another spoon from the drawer
    - If the spoon's length is greater than the diagonal of the container, then there is no way the spoon will drop into the gravy
- Another way to prevent this problem is by pouring the gravy into a narrower container so the spoon cannot fall into it
    - Measure the length of the spoon and compare it to all the available containers
    - Go through each container that can be found in every cupboard
    - If the length of the spoon is less than the diagonal of that container, then get another container
        - Each container must have different dimensions
        - Compare the length of the spoon with the diagonal of every new container
        - If the container's diagonal is still greater than the spoon's length, repeat this process by getting another container from the cupboard
    - If the length of the spoon is greater than the diagonal of the container, then this problem is prevented

How can this problem be solved with a robotic system?
- A robot can pick up the spoon and throw it into the sink, similarly to what a human would do (only works with metallic spoons)
    - If the spoon is visible, the robot can extend a robotic arm with a camera lens to determine the location of the spoon within the gravy
        - The camera lens can 'see' where this spoon is and allows for the metallic arm to hover right above it
    - If the spoon is not visible within the gravy, but is metal, the robot can again, extend a metallic arm, but this time with magnets to determine the location of the spoon
        - The clean robotic arm goes through the gravy until some metal is picked up by the magnets on the arm
            - The robotic arm starts from the left of the container and works its way to the right side
    - Once the location of the spoon has been determined, the extended robotic arm can grab and hold on to the spoon
        - The robot's 'fingers' curl around the spoon to get a good grip
    - The robot then lifts the spoon out from the gravy and drops it into the sink
        - Once the robot has the spoon in hand, it rolls over towards the sink using its mechanical components
        - The robot extends its robotic arm directly over the sink
        - The robot then uncurls its fingers and releases its grip to drop the spoon directly into the sink for washing later
